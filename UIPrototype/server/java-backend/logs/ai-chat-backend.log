2025-06-30 12:36:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 12:36:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/messages
2025-06-30 12:36:59 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 12:36:59 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 12:36:59 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 12:36:59 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 12:36:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 12:36:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 12:36:59 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 12:36:59 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 12:36:59 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 12:36:59 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 12:36:59 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 12:36:59 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 12:36:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 12:36:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/messages
2025-06-30 12:36:59 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 12:36:59 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 12:36:59 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 12:36:59 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 12:36:59 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 12:36:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 12:36:59 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 12:36:59 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 12:36:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 12:36:59 [http-nio-8080-exec-9] INFO  c.a.controller.UserController - 获取用户 258123565311@qq.com 的消息列表
2025-06-30 12:36:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        am1_0.id,
        am1_0.content,
        am1_0.created_at,
        am1_0.from_user_id,
        am1_0.is_read,
        am1_0.message_type,
        am1_0.subject,
        am1_0.to_user_id 
    from
        admin_messages am1_0 
    where
        am1_0.to_user_id=? 
    order by
        am1_0.created_at desc,
        am1_0.created_at desc 
    limit
        ?, ?
2025-06-30 12:36:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/messages
2025-06-30 12:36:59 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 12:36:59 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 12:36:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 12:36:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 12:36:59 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 12:36:59 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 12:36:59 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 12:36:59 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/messages
2025-06-30 12:36:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 12:36:59 [http-nio-8080-exec-10] INFO  c.a.controller.UserController - 获取用户 258123565311@qq.com 的消息列表
2025-06-30 12:36:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        am1_0.id,
        am1_0.content,
        am1_0.created_at,
        am1_0.from_user_id,
        am1_0.is_read,
        am1_0.message_type,
        am1_0.subject,
        am1_0.to_user_id 
    from
        admin_messages am1_0 
    where
        am1_0.to_user_id=? 
    order by
        am1_0.created_at desc,
        am1_0.created_at desc 
    limit
        ?, ?
2025-06-30 12:36:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 12:36:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 12:36:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 12:36:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 12:36:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 12:36:59 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 12:36:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 12:36:59 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 12:36:59 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 12:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 12:36:59 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 12:36:59 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 12:36:59 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 12:36:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 12:36:59 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 12:36:59 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 12:36:59 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 12:36:59 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 12:36:59 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 12:36:59 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 12:36:59 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 12:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 12:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 12:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 12:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 12:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 12:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 12:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 12:36:59 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 12:43:24 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-06-30 12:43:24 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 12:43:24 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 12:43:24 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 12:43:24 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 12:43:24 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 12:43:24 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 12:43:25 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-06-30 12:43:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 12:43:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/messages
2025-06-30 12:43:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 12:43:25 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 12:43:25 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 12:43:25 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 12:43:25 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 12:43:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 12:43:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 12:43:25 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 12:43:25 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 12:43:25 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 12:43:25 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/messages
2025-06-30 12:43:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 12:43:25 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 12:43:25 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 12:43:25 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 12:43:25 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 12:43:25 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 12:43:25 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 12:43:25 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 12:43:25 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 12:43:25 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 12:43:25 [http-nio-8080-exec-10] INFO  c.a.controller.UserController - 获取用户 258123565311@qq.com 的消息列表
2025-06-30 12:43:25 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 12:43:25 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 12:43:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 12:43:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        am1_0.id,
        am1_0.content,
        am1_0.created_at,
        am1_0.from_user_id,
        am1_0.is_read,
        am1_0.message_type,
        am1_0.subject,
        am1_0.to_user_id 
    from
        admin_messages am1_0 
    where
        am1_0.to_user_id=? 
    order by
        am1_0.created_at desc,
        am1_0.created_at desc 
    limit
        ?, ?
2025-06-30 12:43:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 12:43:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 12:43:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 12:43:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 12:43:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 12:43:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 12:43:25 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 12:59:21 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-30 12:59:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-30 12:59:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-30 12:59:35 [main] INFO  c.a.AiChatBackendApplication - Starting AiChatBackendApplication using Java 21.0.7 with PID 39716 (G:\sework\UIPrototype\server\java-backend\target\classes started by wen25 in G:\sework\UIPrototype\server\java-backend)
2025-06-30 12:59:35 [main] DEBUG c.a.AiChatBackendApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-06-30 12:59:35 [main] INFO  c.a.AiChatBackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 113 ms. Found 7 JPA repository interfaces.
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.AdminMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.SupportChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.SystemLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 12:59:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-30 12:59:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-30 12:59:36 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-30 12:59:36 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-06-30 12:59:36 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-30 12:59:36 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1330 ms
2025-06-30 12:59:36 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-30 12:59:37 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-06-30 12:59:37 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-30 12:59:37 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-30 12:59:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-30 12:59:37 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@17f41739
2025-06-30 12:59:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-30 12:59:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-30 12:59:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-30 12:59:38 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-30 12:59:38 [main] DEBUG org.hibernate.SQL - 
    alter table admin_messages 
       modify column from_user_id bigint not null
2025-06-30 12:59:38 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table admin_messages 
       modify column from_user_id bigint not null" via JDBC [Cannot change column 'from_user_id': used in a foreign key constraint 'admin_messages_ibfk_1']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table admin_messages 
       modify column from_user_id bigint not null" via JDBC [Cannot change column 'from_user_id': used in a foreign key constraint 'admin_messages_ibfk_1']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'from_user_id': used in a foreign key constraint 'admin_messages_ibfk_1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 12:59:38 [main] DEBUG org.hibernate.SQL - 
    alter table admin_messages 
       modify column to_user_id bigint
2025-06-30 12:59:38 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table admin_messages 
       modify column to_user_id bigint" via JDBC [Cannot change column 'to_user_id': used in a foreign key constraint 'admin_messages_ibfk_2']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table admin_messages 
       modify column to_user_id bigint" via JDBC [Cannot change column 'to_user_id': used in a foreign key constraint 'admin_messages_ibfk_2']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'to_user_id': used in a foreign key constraint 'admin_messages_ibfk_2'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 12:59:38 [main] DEBUG org.hibernate.SQL - 
    alter table chats 
       modify column id bigint not null auto_increment
2025-06-30 12:59:38 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table chats 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'fk_messages_chat_id' of table 'database.messages']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table chats 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'fk_messages_chat_id' of table 'database.messages']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'id': used in a foreign key constraint 'fk_messages_chat_id' of table 'database.messages'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 12:59:38 [main] DEBUG org.hibernate.SQL - 
    alter table chats 
       modify column user_id bigint not null
2025-06-30 12:59:38 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table chats 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'chats_ibfk_1']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table chats 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'chats_ibfk_1']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'user_id': used in a foreign key constraint 'chats_ibfk_1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 12:59:38 [main] DEBUG org.hibernate.SQL - 
    alter table messages 
       modify column chat_id bigint not null
2025-06-30 12:59:38 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table messages 
       modify column chat_id bigint not null" via JDBC [Cannot change column 'chat_id': used in a foreign key constraint 'fk_messages_chat_id']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table messages 
       modify column chat_id bigint not null" via JDBC [Cannot change column 'chat_id': used in a foreign key constraint 'fk_messages_chat_id']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'chat_id': used in a foreign key constraint 'fk_messages_chat_id'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 12:59:38 [main] DEBUG org.hibernate.SQL - 
    alter table system_logs 
       modify column user_id bigint
2025-06-30 12:59:38 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table system_logs 
       modify column user_id bigint" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'system_logs_ibfk_1']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table system_logs 
       modify column user_id bigint" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'system_logs_ibfk_1']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'user_id': used in a foreign key constraint 'system_logs_ibfk_1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 12:59:38 [main] DEBUG org.hibernate.SQL - 
    alter table user_settings 
       modify column user_id bigint not null
2025-06-30 12:59:38 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table user_settings 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'fk_user_settings_user_id']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table user_settings 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'fk_user_settings_user_id']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'user_id': used in a foreign key constraint 'fk_user_settings_user_id'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 12:59:38 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       modify column id bigint not null auto_increment
2025-06-30 12:59:38 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table users 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'admin_messages_ibfk_1' of table 'database.admin_messages']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table users 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'admin_messages_ibfk_1' of table 'database.admin_messages']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'id': used in a foreign key constraint 'admin_messages_ibfk_1' of table 'database.admin_messages'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 12:59:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-30 12:59:38 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-30 12:59:39 [main] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-06-30 12:59:39 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-30 12:59:40 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3030a20, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@331d7260, org.springframework.security.web.context.SecurityContextHolderFilter@4a4cdeb0, org.springframework.security.web.header.HeaderWriterFilter@78288298, org.springframework.web.filter.CorsFilter@6086ba82, org.springframework.security.web.authentication.logout.LogoutFilter@5d3e24e2, com.aiplatform.security.JwtAuthenticationFilter@181cafd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1e5bc4e7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@539c833d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1065f09, org.springframework.security.web.session.SessionManagementFilter@538ee7ab, org.springframework.security.web.access.ExceptionTranslationFilter@73372652, org.springframework.security.web.access.intercept.AuthorizationFilter@5b9d7666]
2025-06-30 12:59:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-06-30 12:59:40 [main] INFO  c.a.AiChatBackendApplication - Started AiChatBackendApplication in 5.524 seconds (process running for 5.853)
2025-06-30 13:01:08 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-30 13:01:08 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-30 13:01:08 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-30 13:01:08 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-06-30 13:01:08 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:08 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:09 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:09 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:09 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:09 [http-nio-8080-exec-1] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/api/auth/me' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-06-30 13:01:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-06-30 13:01:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-06-30 13:01:09 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:09 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:09 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:09 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:09 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-06-30 13:01:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:01:09 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:09 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:09 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:09 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:09 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:09 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:01:09 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:01:09 [http-nio-8080-exec-4] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:01:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:09 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:01:09 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:01:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:01:09 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:09 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:09 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:09 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:09 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:09 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:01:09 [http-nio-8080-exec-2] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:01:09 [http-nio-8080-exec-2] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:01:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:09 [http-nio-8080-exec-2] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:01:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:01:52 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:01:52 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:01:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:01:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:01:52 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:52 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:52 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:52 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:52 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:52 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:52 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:52 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:52 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:52 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:52 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:52 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:52 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:52 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:52 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:52 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:52 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:52 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:52 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:52 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:52 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:01:52 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:01:52 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:01:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:01:52 [http-nio-8080-exec-3] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:01:52 [http-nio-8080-exec-10] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:01:52 [http-nio-8080-exec-1] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:01:52 [http-nio-8080-exec-9] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:01:52 [http-nio-8080-exec-3] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:01:52 [http-nio-8080-exec-10] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:01:52 [http-nio-8080-exec-1] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:01:52 [http-nio-8080-exec-9] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:01:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:52 [http-nio-8080-exec-10] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:01:52 [http-nio-8080-exec-9] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:01:52 [http-nio-8080-exec-1] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:01:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:01:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:01:52 [http-nio-8080-exec-3] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:01:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:01:52 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:01:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
2025-06-30 13:01:53 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:53 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:53 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:53 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:53 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/logout
2025-06-30 13:01:55 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-06-30 13:01:55 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-30 13:01:55 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-06-30 13:01:55 [http-nio-8080-exec-5] INFO  c.a.controller.AuthController - 收到用户登录请求: 258123565311@qq.com
2025-06-30 13:01:55 [http-nio-8080-exec-5] INFO  com.aiplatform.service.UserService - 用户登录请求: 258123565311@qq.com
2025-06-30 13:01:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:55 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:55 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:55 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:55 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:55 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:55 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-06-30 13:01:55 [http-nio-8080-exec-5] INFO  com.aiplatform.service.UserService - 开始为用户 9 执行登录自动清理
2025-06-30 13:01:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND c.isProtected = false 
        AND c.lastActivity < :cutoffDate */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and c1_0.is_protected=0 
            and c1_0.last_activity<?
2025-06-30 13:01:55 [http-nio-8080-exec-5] INFO  com.aiplatform.service.UserService - 用户 9 没有需要清理的过期对话
2025-06-30 13:01:55 [http-nio-8080-exec-5] INFO  com.aiplatform.service.UserService - 用户登录成功: 9
2025-06-30 13:01:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* update
        for com.aiplatform.entity.User */update users 
    set
        email=?,
        last_login=?,
        password=?,
        permissions=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-06-30 13:01:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:01:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:01:55 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:55 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:55 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:55 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:55 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:55 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:55 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:01:55 [http-nio-8080-exec-9] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:01:55 [http-nio-8080-exec-9] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:01:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:55 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:55 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:55 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:01:55 [http-nio-8080-exec-10] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:01:55 [http-nio-8080-exec-10] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:01:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:55 [http-nio-8080-exec-9] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:01:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:01:55 [http-nio-8080-exec-10] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:01:55 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:01:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/usage-stats
2025-06-30 13:01:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/profile
2025-06-30 13:01:57 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/profile
2025-06-30 13:01:57 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/usage-stats
2025-06-30 13:01:57 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:57 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:57 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:57 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:57 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:57 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:57 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:01:57 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:01:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:57 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:57 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:57 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:57 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:01:57 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:57 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:57 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:57 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:01:57 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:57 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:57 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:57 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:01:57 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/profile
2025-06-30 13:01:57 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/profile
2025-06-30 13:01:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/usage-stats
2025-06-30 13:01:57 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/usage-stats
2025-06-30 13:01:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:01:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(c1_0.id) 
    from
        chats c1_0 
    where
        c1_0.user_id=?
2025-06-30 13:01:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(c1_0.id) 
    from
        chats c1_0 
    where
        c1_0.user_id=?
2025-06-30 13:01:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    INNER JOIN
        Chat c 
            ON m.chatId = c.id 
    WHERE
        c.userId = :userId */ select
            count(m1_0.id) 
        from
            messages m1_0 
        join
            chats c1_0 
                on m1_0.chat_id=c1_0.id 
        where
            c1_0.user_id=?
2025-06-30 13:01:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    INNER JOIN
        Chat c 
            ON m.chatId = c.id 
    WHERE
        c.userId = :userId */ select
            count(m1_0.id) 
        from
            messages m1_0 
        join
            chats c1_0 
                on m1_0.chat_id=c1_0.id 
        where
            c1_0.user_id=?
2025-06-30 13:01:57 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(c1_0.id) 
    from
        chats c1_0 
    where
        c1_0.user_id=? 
        and c1_0.is_favorite
2025-06-30 13:01:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(c1_0.id) 
    from
        chats c1_0 
    where
        c1_0.user_id=? 
        and c1_0.is_favorite
2025-06-30 13:02:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:02:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:02:00 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:02:00 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:02:00 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:02:00 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:02:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:02:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:02:00 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:02:00 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:02:00 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:02:00 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:02:00 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:02:00 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:02:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:02:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:02:00 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:02:00 [http-nio-8080-exec-3] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:02:00 [http-nio-8080-exec-4] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:02:00 [http-nio-8080-exec-3] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:02:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:02:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:02:00 [http-nio-8080-exec-3] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:02:00 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:02:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:02:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:02:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/messages
2025-06-30 13:02:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:02:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/messages
2025-06-30 13:02:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:02:02 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:02:02 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:02:02 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:02:02 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:02:02 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:02:02 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:02:02 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:02:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:02:02 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:02:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:02:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:02:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:02:02 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:02:02 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:02:02 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:02:02 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:02:02 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:02:02 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:02:02 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:02:02 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:02:02 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:02:02 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:02:02 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:02:02 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:02:02 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/messages
2025-06-30 13:02:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/messages
2025-06-30 13:02:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:02:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:02:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:02:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:02:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:02:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:02:02 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:02:02 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:02:02 [http-nio-8080-exec-9] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:02:02 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:02:02 [http-nio-8080-exec-9] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:02:02 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:02:02 [http-nio-8080-exec-9] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:02:02 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:02:02 [http-nio-8080-exec-9] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:02:02 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:02:02 [http-nio-8080-exec-9] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:02:02 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:02:02 [http-nio-8080-exec-10] INFO  c.a.controller.UserController - 获取用户 258123565311@qq.com 的消息列表
2025-06-30 13:02:02 [http-nio-8080-exec-8] INFO  c.a.controller.UserController - 获取用户 258123565311@qq.com 的消息列表
2025-06-30 13:02:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:02:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:02:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        am1_0.id,
        am1_0.content,
        am1_0.created_at,
        am1_0.from_user_id,
        am1_0.is_read,
        am1_0.message_type,
        am1_0.subject,
        am1_0.to_user_id 
    from
        admin_messages am1_0 
    where
        am1_0.to_user_id=? 
    order by
        am1_0.created_at desc,
        am1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:02:02 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        am1_0.id,
        am1_0.content,
        am1_0.created_at,
        am1_0.from_user_id,
        am1_0.is_read,
        am1_0.message_type,
        am1_0.subject,
        am1_0.to_user_id 
    from
        admin_messages am1_0 
    where
        am1_0.to_user_id=? 
    order by
        am1_0.created_at desc,
        am1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:02:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:02:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:02:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:02:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:02:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:02:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:02:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:02:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:02:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:02:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:02:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:02:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:02:02 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:02:02 [http-nio-8080-exec-9] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:09:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-30 13:09:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-30 13:09:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-30 13:09:06 [main] INFO  c.a.AiChatBackendApplication - Starting AiChatBackendApplication using Java 21.0.7 with PID 36288 (G:\sework\UIPrototype\server\java-backend\target\classes started by wen25 in G:\sework\UIPrototype\server\java-backend)
2025-06-30 13:09:06 [main] DEBUG c.a.AiChatBackendApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-06-30 13:09:06 [main] INFO  c.a.AiChatBackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 13:09:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 13:09:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-30 13:09:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 89 ms. Found 7 JPA repository interfaces.
2025-06-30 13:09:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 13:09:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 13:09:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.AdminMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:09:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:09:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:09:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.SupportChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:09:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.SystemLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:09:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:09:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:09:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-30 13:09:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-30 13:09:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-30 13:09:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-06-30 13:09:07 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-30 13:09:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1084 ms
2025-06-30 13:09:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-30 13:09:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-06-30 13:09:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-30 13:09:07 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-30 13:09:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-30 13:09:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@422ba9b7
2025-06-30 13:09:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-30 13:09:08 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-30 13:09:08 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-30 13:09:08 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-30 13:09:08 [main] DEBUG org.hibernate.SQL - 
    alter table admin_messages 
       modify column from_user_id bigint not null
2025-06-30 13:09:08 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table admin_messages 
       modify column from_user_id bigint not null" via JDBC [Cannot change column 'from_user_id': used in a foreign key constraint 'admin_messages_ibfk_1']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table admin_messages 
       modify column from_user_id bigint not null" via JDBC [Cannot change column 'from_user_id': used in a foreign key constraint 'admin_messages_ibfk_1']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'from_user_id': used in a foreign key constraint 'admin_messages_ibfk_1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:09:08 [main] DEBUG org.hibernate.SQL - 
    alter table admin_messages 
       modify column to_user_id bigint
2025-06-30 13:09:08 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table admin_messages 
       modify column to_user_id bigint" via JDBC [Cannot change column 'to_user_id': used in a foreign key constraint 'admin_messages_ibfk_2']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table admin_messages 
       modify column to_user_id bigint" via JDBC [Cannot change column 'to_user_id': used in a foreign key constraint 'admin_messages_ibfk_2']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'to_user_id': used in a foreign key constraint 'admin_messages_ibfk_2'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:09:08 [main] DEBUG org.hibernate.SQL - 
    alter table chats 
       modify column id bigint not null auto_increment
2025-06-30 13:09:08 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table chats 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'fk_messages_chat_id' of table 'database.messages']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table chats 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'fk_messages_chat_id' of table 'database.messages']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'id': used in a foreign key constraint 'fk_messages_chat_id' of table 'database.messages'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:09:08 [main] DEBUG org.hibernate.SQL - 
    alter table chats 
       modify column user_id bigint not null
2025-06-30 13:09:08 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table chats 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'chats_ibfk_1']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table chats 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'chats_ibfk_1']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'user_id': used in a foreign key constraint 'chats_ibfk_1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:09:08 [main] DEBUG org.hibernate.SQL - 
    alter table messages 
       modify column chat_id bigint not null
2025-06-30 13:09:08 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table messages 
       modify column chat_id bigint not null" via JDBC [Cannot change column 'chat_id': used in a foreign key constraint 'fk_messages_chat_id']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table messages 
       modify column chat_id bigint not null" via JDBC [Cannot change column 'chat_id': used in a foreign key constraint 'fk_messages_chat_id']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'chat_id': used in a foreign key constraint 'fk_messages_chat_id'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:09:08 [main] DEBUG org.hibernate.SQL - 
    alter table system_logs 
       modify column user_id bigint
2025-06-30 13:09:08 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table system_logs 
       modify column user_id bigint" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'system_logs_ibfk_1']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table system_logs 
       modify column user_id bigint" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'system_logs_ibfk_1']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'user_id': used in a foreign key constraint 'system_logs_ibfk_1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:09:08 [main] DEBUG org.hibernate.SQL - 
    alter table user_settings 
       modify column user_id bigint not null
2025-06-30 13:09:08 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table user_settings 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'fk_user_settings_user_id']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table user_settings 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'fk_user_settings_user_id']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'user_id': used in a foreign key constraint 'fk_user_settings_user_id'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:09:08 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       modify column id bigint not null auto_increment
2025-06-30 13:09:09 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table users 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'admin_messages_ibfk_1' of table 'database.admin_messages']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table users 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'admin_messages_ibfk_1' of table 'database.admin_messages']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'id': used in a foreign key constraint 'admin_messages_ibfk_1' of table 'database.admin_messages'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:09:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-30 13:09:09 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-30 13:09:09 [main] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-06-30 13:09:10 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-30 13:09:10 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4a74e70d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@513156fd, org.springframework.security.web.context.SecurityContextHolderFilter@2e40d8f9, org.springframework.security.web.header.HeaderWriterFilter@7e775ef3, org.springframework.web.filter.CorsFilter@4fd43b14, org.springframework.security.web.authentication.logout.LogoutFilter@4cd0b8cf, com.aiplatform.security.JwtAuthenticationFilter@f54cdc4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@350a7383, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@538ee7ab, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b9d7666, org.springframework.security.web.session.SessionManagementFilter@54372b03, org.springframework.security.web.access.ExceptionTranslationFilter@6cfd4d4d, org.springframework.security.web.access.intercept.AuthorizationFilter@7eecb648]
2025-06-30 13:09:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-06-30 13:09:10 [main] INFO  c.a.AiChatBackendApplication - Started AiChatBackendApplication in 4.713 seconds (process running for 4.961)
2025-06-30 13:09:50 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-30 13:09:50 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-30 13:09:50 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-06-30 13:09:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-06-30 13:09:50 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:09:50 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:09:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:09:50 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:09:50 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:09:50 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:09:50 [http-nio-8080-exec-1] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/api/auth/me' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-06-30 13:09:50 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-06-30 13:09:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:09:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-06-30 13:09:51 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:09:51 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:09:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:09:51 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:09:51 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:09:51 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:09:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-06-30 13:09:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:09:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:09:51 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:09:51 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:09:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:09:51 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:09:51 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:09:51 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:09:51 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:09:51 [http-nio-8080-exec-10] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:09:51 [http-nio-8080-exec-10] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:09:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:09:51 [http-nio-8080-exec-10] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:09:51 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:09:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:09:51 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:09:51 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:09:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:09:51 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:09:51 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:09:51 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:09:51 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:09:51 [http-nio-8080-exec-5] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:09:51 [http-nio-8080-exec-5] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:09:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:09:51 [http-nio-8080-exec-5] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:09:51 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:10:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/messages
2025-06-30 13:10:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:10:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:10:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/messages
2025-06-30 13:10:02 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:10:02 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:10:02 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:10:02 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:10:02 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:10:02 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:10:02 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:10:02 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:10:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:10:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:10:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:10:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:10:02 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:10:02 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:10:02 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:10:02 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:10:02 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:10:02 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:10:02 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:10:02 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:10:02 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:10:02 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:10:02 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:10:02 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:10:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/messages
2025-06-30 13:10:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:10:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:10:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/messages
2025-06-30 13:10:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:10:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:10:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:10:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:10:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:10:02 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:10:02 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:10:02 [http-nio-8080-exec-1] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:10:02 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:10:02 [http-nio-8080-exec-1] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:10:02 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:10:02 [http-nio-8080-exec-1] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:10:02 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:10:02 [http-nio-8080-exec-1] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:10:02 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:10:02 [http-nio-8080-exec-1] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:10:02 [http-nio-8080-exec-6] INFO  c.a.controller.UserController - 获取用户 258123565311@qq.com 的消息列表
2025-06-30 13:10:02 [http-nio-8080-exec-9] INFO  c.a.controller.UserController - 获取用户 258123565311@qq.com 的消息列表
2025-06-30 13:10:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        am1_0.id,
        am1_0.content,
        am1_0.created_at,
        am1_0.from_user_id,
        am1_0.is_read,
        am1_0.message_type,
        am1_0.subject,
        am1_0.to_user_id 
    from
        admin_messages am1_0 
    where
        am1_0.to_user_id=? 
    order by
        am1_0.created_at desc,
        am1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:10:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        am1_0.id,
        am1_0.content,
        am1_0.created_at,
        am1_0.from_user_id,
        am1_0.is_read,
        am1_0.message_type,
        am1_0.subject,
        am1_0.to_user_id 
    from
        admin_messages am1_0 
    where
        am1_0.to_user_id=? 
    order by
        am1_0.created_at desc,
        am1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:10:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:10:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:10:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:10:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:10:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:10:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:10:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:10:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:10:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:10:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:10:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:10:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:10:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:10:02 [http-nio-8080-exec-1] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:10:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:10:02 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:10:11 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:10:11 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:10:11 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:10:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:10:11 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:10:11 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:10:11 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:10:11 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:10:11 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:10:11 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:10:11 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:10:11 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:10:11 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:10:11 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:10:11 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:10:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:10:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:10:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:10:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:10:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:10:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:10:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:10:11 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:10:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:10:11 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:10:11 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:10:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:10:11 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:10:11 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:10:11 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:10:11 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:10:11 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:10:11 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:10:11 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:10:11 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:10:11 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:10:11 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:10:11 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:10:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:10:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:10:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:10:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:10:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:10:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:10:12 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:10:12 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:10:47 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-30 13:10:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-30 13:10:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-30 13:17:03 [main] INFO  c.a.AiChatBackendApplication - Starting AiChatBackendApplication using Java 21.0.7 with PID 29828 (G:\sework\UIPrototype\server\java-backend\target\classes started by wen25 in G:\sework\UIPrototype\server\java-backend)
2025-06-30 13:17:03 [main] DEBUG c.a.AiChatBackendApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-06-30 13:17:03 [main] INFO  c.a.AiChatBackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 112 ms. Found 7 JPA repository interfaces.
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.AdminMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.SupportChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.SystemLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:17:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-06-30 13:17:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-30 13:17:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-30 13:17:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-06-30 13:17:04 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-30 13:17:04 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1294 ms
2025-06-30 13:17:04 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-30 13:17:04 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-06-30 13:17:04 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-30 13:17:04 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-30 13:17:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-30 13:17:05 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@645d4639
2025-06-30 13:17:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-30 13:17:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-30 13:17:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-30 13:17:05 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-30 13:17:05 [main] DEBUG org.hibernate.SQL - 
    alter table admin_messages 
       modify column from_user_id bigint not null
2025-06-30 13:17:05 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table admin_messages 
       modify column from_user_id bigint not null" via JDBC [Cannot change column 'from_user_id': used in a foreign key constraint 'admin_messages_ibfk_1']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table admin_messages 
       modify column from_user_id bigint not null" via JDBC [Cannot change column 'from_user_id': used in a foreign key constraint 'admin_messages_ibfk_1']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'from_user_id': used in a foreign key constraint 'admin_messages_ibfk_1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:17:05 [main] DEBUG org.hibernate.SQL - 
    alter table admin_messages 
       modify column to_user_id bigint
2025-06-30 13:17:05 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table admin_messages 
       modify column to_user_id bigint" via JDBC [Cannot change column 'to_user_id': used in a foreign key constraint 'admin_messages_ibfk_2']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table admin_messages 
       modify column to_user_id bigint" via JDBC [Cannot change column 'to_user_id': used in a foreign key constraint 'admin_messages_ibfk_2']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'to_user_id': used in a foreign key constraint 'admin_messages_ibfk_2'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:17:05 [main] DEBUG org.hibernate.SQL - 
    alter table chats 
       modify column id bigint not null auto_increment
2025-06-30 13:17:05 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table chats 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'fk_messages_chat_id' of table 'database.messages']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table chats 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'fk_messages_chat_id' of table 'database.messages']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'id': used in a foreign key constraint 'fk_messages_chat_id' of table 'database.messages'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:17:05 [main] DEBUG org.hibernate.SQL - 
    alter table chats 
       modify column user_id bigint not null
2025-06-30 13:17:05 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table chats 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'chats_ibfk_1']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table chats 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'chats_ibfk_1']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'user_id': used in a foreign key constraint 'chats_ibfk_1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:17:05 [main] DEBUG org.hibernate.SQL - 
    alter table messages 
       modify column chat_id bigint not null
2025-06-30 13:17:05 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table messages 
       modify column chat_id bigint not null" via JDBC [Cannot change column 'chat_id': used in a foreign key constraint 'fk_messages_chat_id']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table messages 
       modify column chat_id bigint not null" via JDBC [Cannot change column 'chat_id': used in a foreign key constraint 'fk_messages_chat_id']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'chat_id': used in a foreign key constraint 'fk_messages_chat_id'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:17:05 [main] DEBUG org.hibernate.SQL - 
    alter table system_logs 
       modify column user_id bigint
2025-06-30 13:17:05 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table system_logs 
       modify column user_id bigint" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'system_logs_ibfk_1']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table system_logs 
       modify column user_id bigint" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'system_logs_ibfk_1']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'user_id': used in a foreign key constraint 'system_logs_ibfk_1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:17:05 [main] DEBUG org.hibernate.SQL - 
    alter table user_settings 
       modify column user_id bigint not null
2025-06-30 13:17:05 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table user_settings 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'fk_user_settings_user_id']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table user_settings 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'fk_user_settings_user_id']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'user_id': used in a foreign key constraint 'fk_user_settings_user_id'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:17:05 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       modify column id bigint not null auto_increment
2025-06-30 13:17:05 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table users 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'admin_messages_ibfk_1' of table 'database.admin_messages']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table users 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'admin_messages_ibfk_1' of table 'database.admin_messages']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'id': used in a foreign key constraint 'admin_messages_ibfk_1' of table 'database.admin_messages'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:17:06 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-30 13:17:06 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-30 13:17:06 [main] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-06-30 13:17:07 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-30 13:17:07 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4cd0b8cf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a094674, org.springframework.security.web.context.SecurityContextHolderFilter@37f37699, org.springframework.security.web.header.HeaderWriterFilter@115cbd9b, org.springframework.web.filter.CorsFilter@4f5f4f7a, org.springframework.security.web.authentication.logout.LogoutFilter@4795def, com.aiplatform.security.JwtAuthenticationFilter@4758f533, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@756695e3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78288298, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@214a81a4, org.springframework.security.web.session.SessionManagementFilter@7e775ef3, org.springframework.security.web.access.ExceptionTranslationFilter@473c1e53, org.springframework.security.web.access.intercept.AuthorizationFilter@595be089]
2025-06-30 13:17:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-06-30 13:17:07 [main] INFO  c.a.AiChatBackendApplication - Started AiChatBackendApplication in 5.04 seconds (process running for 5.309)
2025-06-30 13:17:23 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-30 13:17:23 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-30 13:17:23 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-30 13:17:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:17:23 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:17:23 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:17:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:17:23 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:17:23 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:17:23 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:17:23 [http-nio-8080-exec-2] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/api/admin/support/customer-chats' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-06-30 13:17:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:17:23 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:17:23 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:17:23 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:17:23 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:17:23 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:17:23 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:17:23 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:17:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:17:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:17:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:17:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:17:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:17:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:17:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:17:23 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:17:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:17:23 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:17:23 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:17:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:17:23 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:17:23 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:17:23 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:17:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:17:23 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:17:23 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:17:23 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:17:23 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:17:23 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:17:23 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:17:23 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:17:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:17:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:17:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:17:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:17:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:17:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:17:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:17:24 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:17:38 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:17:38 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:17:38 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:17:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:17:38 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:17:38 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:17:38 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:17:38 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:17:38 [http-nio-8080-exec-3] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:17:38 [http-nio-8080-exec-3] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:17:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:17:38 [http-nio-8080-exec-3] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:17:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:17:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:17:38 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:17:38 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:17:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:17:38 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:17:38 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:17:38 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:17:38 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:17:38 [http-nio-8080-exec-6] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:17:38 [http-nio-8080-exec-6] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:17:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:17:38 [http-nio-8080-exec-6] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:17:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:39:10 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-30 13:39:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-30 13:39:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-30 13:39:19 [main] INFO  c.a.AiChatBackendApplication - Starting AiChatBackendApplication using Java 21.0.7 with PID 37620 (G:\sework\UIPrototype\server\java-backend\target\classes started by wen25 in G:\sework\UIPrototype\server\java-backend)
2025-06-30 13:39:19 [main] DEBUG c.a.AiChatBackendApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-06-30 13:39:19 [main] INFO  c.a.AiChatBackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 113 ms. Found 7 JPA repository interfaces.
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.AdminMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.SupportChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.SystemLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.aiplatform.repository.UserSettingsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-30 13:39:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-06-30 13:39:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-30 13:39:20 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-30 13:39:20 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-06-30 13:39:21 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-30 13:39:21 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1241 ms
2025-06-30 13:39:21 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-30 13:39:21 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-06-30 13:39:21 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-30 13:39:21 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-30 13:39:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-30 13:39:21 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@422ba9b7
2025-06-30 13:39:21 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-30 13:39:21 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-30 13:39:21 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-30 13:39:22 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-30 13:39:22 [main] DEBUG org.hibernate.SQL - 
    alter table admin_messages 
       modify column from_user_id bigint not null
2025-06-30 13:39:22 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table admin_messages 
       modify column from_user_id bigint not null" via JDBC [Cannot change column 'from_user_id': used in a foreign key constraint 'admin_messages_ibfk_1']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table admin_messages 
       modify column from_user_id bigint not null" via JDBC [Cannot change column 'from_user_id': used in a foreign key constraint 'admin_messages_ibfk_1']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'from_user_id': used in a foreign key constraint 'admin_messages_ibfk_1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:39:22 [main] DEBUG org.hibernate.SQL - 
    alter table admin_messages 
       modify column to_user_id bigint
2025-06-30 13:39:22 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table admin_messages 
       modify column to_user_id bigint" via JDBC [Cannot change column 'to_user_id': used in a foreign key constraint 'admin_messages_ibfk_2']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table admin_messages 
       modify column to_user_id bigint" via JDBC [Cannot change column 'to_user_id': used in a foreign key constraint 'admin_messages_ibfk_2']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'to_user_id': used in a foreign key constraint 'admin_messages_ibfk_2'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:39:22 [main] DEBUG org.hibernate.SQL - 
    alter table chats 
       modify column id bigint not null auto_increment
2025-06-30 13:39:22 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table chats 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'fk_messages_chat_id' of table 'database.messages']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table chats 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'fk_messages_chat_id' of table 'database.messages']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'id': used in a foreign key constraint 'fk_messages_chat_id' of table 'database.messages'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:39:22 [main] DEBUG org.hibernate.SQL - 
    alter table chats 
       modify column user_id bigint not null
2025-06-30 13:39:22 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table chats 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'chats_ibfk_1']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table chats 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'chats_ibfk_1']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'user_id': used in a foreign key constraint 'chats_ibfk_1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:39:22 [main] DEBUG org.hibernate.SQL - 
    alter table messages 
       modify column chat_id bigint not null
2025-06-30 13:39:22 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table messages 
       modify column chat_id bigint not null" via JDBC [Cannot change column 'chat_id': used in a foreign key constraint 'fk_messages_chat_id']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table messages 
       modify column chat_id bigint not null" via JDBC [Cannot change column 'chat_id': used in a foreign key constraint 'fk_messages_chat_id']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'chat_id': used in a foreign key constraint 'fk_messages_chat_id'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:39:22 [main] DEBUG org.hibernate.SQL - 
    alter table system_logs 
       modify column user_id bigint
2025-06-30 13:39:22 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table system_logs 
       modify column user_id bigint" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'system_logs_ibfk_1']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table system_logs 
       modify column user_id bigint" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'system_logs_ibfk_1']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'user_id': used in a foreign key constraint 'system_logs_ibfk_1'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:39:22 [main] DEBUG org.hibernate.SQL - 
    alter table user_settings 
       modify column user_id bigint not null
2025-06-30 13:39:22 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table user_settings 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'fk_user_settings_user_id']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table user_settings 
       modify column user_id bigint not null" via JDBC [Cannot change column 'user_id': used in a foreign key constraint 'fk_user_settings_user_id']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'user_id': used in a foreign key constraint 'fk_user_settings_user_id'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:39:22 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       modify column id bigint not null auto_increment
2025-06-30 13:39:22 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table users 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'admin_messages_ibfk_1' of table 'database.admin_messages']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table users 
       modify column id bigint not null auto_increment" via JDBC [Cannot change column 'id': used in a foreign key constraint 'admin_messages_ibfk_1' of table 'database.admin_messages']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.migrateTable(AbstractSchemaMigrator.java:333)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:84)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:295)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1771)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:689)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1166)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1686)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1435)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1441)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:911)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:789)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:241)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4850)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:917)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:488)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:501)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:610)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:455)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:323)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at com.aiplatform.AiChatBackendApplication.main(AiChatBackendApplication.java:18)
Caused by: java.sql.SQLException: Cannot change column 'id': used in a foreign key constraint 'admin_messages_ibfk_1' of table 'database.admin_messages'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:763)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 123 common frames omitted
2025-06-30 13:39:22 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-30 13:39:23 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-30 13:39:23 [main] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-06-30 13:39:23 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-30 13:39:24 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@68955382, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@682f9202, org.springframework.security.web.context.SecurityContextHolderFilter@544364ba, org.springframework.security.web.header.HeaderWriterFilter@783a76d8, org.springframework.web.filter.CorsFilter@5d3e24e2, org.springframework.security.web.authentication.logout.LogoutFilter@6dafdb99, com.aiplatform.security.JwtAuthenticationFilter@13ea9afc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f849a79, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6304ff53, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@280cc940, org.springframework.security.web.session.SessionManagementFilter@73372652, org.springframework.security.web.access.ExceptionTranslationFilter@4236d55, org.springframework.security.web.access.intercept.AuthorizationFilter@4a094674]
2025-06-30 13:39:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-06-30 13:39:24 [main] INFO  c.a.AiChatBackendApplication - Started AiChatBackendApplication in 5.232 seconds (process running for 5.478)
2025-06-30 13:39:42 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-30 13:39:42 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-30 13:39:42 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-30 13:39:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-06-30 13:39:42 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:39:42 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:39:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:42 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:39:42 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:39:42 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:39:42 [http-nio-8080-exec-1] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/api/auth/me' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-06-30 13:39:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-06-30 13:39:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-06-30 13:39:42 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:39:42 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:39:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:42 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:39:42 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:39:42 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:39:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-06-30 13:39:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:42 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:39:42 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:39:42 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:39:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:43 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:39:43 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:39:43 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:39:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:39:43 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:39:43 [http-nio-8080-exec-4] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:39:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:43 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:39:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:39:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:39:43 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:39:43 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:39:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:43 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:39:43 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:39:43 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:39:43 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:39:43 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:39:43 [http-nio-8080-exec-4] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:39:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:43 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:39:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:39:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:39:48 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:39:48 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:39:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:48 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:39:48 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:39:48 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:39:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:39:48 [http-nio-8080-exec-6] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:39:48 [http-nio-8080-exec-6] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:39:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:48 [http-nio-8080-exec-6] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:39:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:39:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:39:48 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:39:48 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:39:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:48 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:39:48 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:39:48 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:39:48 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:39:48 [http-nio-8080-exec-5] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:39:48 [http-nio-8080-exec-5] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:39:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:48 [http-nio-8080-exec-5] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:39:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:39:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/messages
2025-06-30 13:39:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:39:50 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:39:50 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:39:50 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:39:50 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:39:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:50 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:39:50 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:39:50 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:39:50 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:39:50 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:39:50 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:39:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/messages
2025-06-30 13:39:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:39:50 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:39:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:50 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:39:50 [http-nio-8080-exec-8] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:39:50 [http-nio-8080-exec-8] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:39:50 [http-nio-8080-exec-8] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:39:50 [http-nio-8080-exec-8] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:39:50 [http-nio-8080-exec-8] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:39:50 [http-nio-8080-exec-10] INFO  c.a.controller.UserController - 获取用户 258123565311@qq.com 的消息列表
2025-06-30 13:39:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:39:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        am1_0.id,
        am1_0.content,
        am1_0.created_at,
        am1_0.from_user_id,
        am1_0.is_read,
        am1_0.message_type,
        am1_0.subject,
        am1_0.to_user_id 
    from
        admin_messages am1_0 
    where
        am1_0.to_user_id=? 
    order by
        am1_0.created_at desc,
        am1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:39:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/messages
2025-06-30 13:39:50 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:39:50 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:39:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:50 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:39:50 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:39:50 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:39:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/messages
2025-06-30 13:39:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:39:50 [http-nio-8080-exec-9] INFO  c.a.controller.UserController - 获取用户 258123565311@qq.com 的消息列表
2025-06-30 13:39:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        am1_0.id,
        am1_0.content,
        am1_0.created_at,
        am1_0.from_user_id,
        am1_0.is_read,
        am1_0.message_type,
        am1_0.subject,
        am1_0.to_user_id 
    from
        admin_messages am1_0 
    where
        am1_0.to_user_id=? 
    order by
        am1_0.created_at desc,
        am1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:39:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:39:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:39:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:39:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:39:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:39:50 [http-nio-8080-exec-8] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:39:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:39:50 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:39:50 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:39:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:50 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:39:50 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:39:50 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:39:50 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:39:50 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:39:50 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:39:50 [http-nio-8080-exec-7] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:39:50 [http-nio-8080-exec-7] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:39:50 [http-nio-8080-exec-7] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:39:50 [http-nio-8080-exec-7] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:39:50 [http-nio-8080-exec-7] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:39:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:39:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:39:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:39:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:39:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:39:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:39:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:39:50 [http-nio-8080-exec-7] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:39:55 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /admin/support/reply
2025-06-30 13:39:55 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:39:55 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:55 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:39:55 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:39:55 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:39:55 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /admin/support/reply
2025-06-30 13:39:55 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.replyToCustomer(java.util.Map); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:39:55 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.replyToCustomer(java.util.Map); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:39:55 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 客服回复客户
2025-06-30 13:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.aiplatform.entity.SupportChat */insert 
    into
        support_chats (content, created_at, is_read, sender_type, support_id, updated_at, user_id, version) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
2025-06-30 13:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:39:55 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 客服 258123565311@qq.com 回复客户 25812356531111@qq.com 成功
2025-06-30 13:39:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:39:55 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:39:55 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:39:55 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:39:55 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:39:55 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:39:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:39:55 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:39:55 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:39:55 [http-nio-8080-exec-3] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:39:55 [http-nio-8080-exec-3] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:39:55 [http-nio-8080-exec-3] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:39:55 [http-nio-8080-exec-3] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:39:55 [http-nio-8080-exec-3] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:39:55 [http-nio-8080-exec-3] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:40:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:40:05 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:05 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:05 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:05 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:05 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:05 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:40:05 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:05 [http-nio-8080-exec-4] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:05 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:40:05 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:05 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:05 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:05 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:05 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:05 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:40:05 [http-nio-8080-exec-6] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:05 [http-nio-8080-exec-6] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:05 [http-nio-8080-exec-6] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:05 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:13 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/profile
2025-06-30 13:40:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/usage-stats
2025-06-30 13:40:13 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:13 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:13 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:13 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:13 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:13 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:13 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:13 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:13 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:13 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:13 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/usage-stats
2025-06-30 13:40:13 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/profile
2025-06-30 13:40:13 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(c1_0.id) 
    from
        chats c1_0 
    where
        c1_0.user_id=?
2025-06-30 13:40:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/profile
2025-06-30 13:40:13 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:13 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    INNER JOIN
        Chat c 
            ON m.chatId = c.id 
    WHERE
        c.userId = :userId */ select
            count(m1_0.id) 
        from
            messages m1_0 
        join
            chats c1_0 
                on m1_0.chat_id=c1_0.id 
        where
            c1_0.user_id=?
2025-06-30 13:40:13 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:13 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:13 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:13 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/profile
2025-06-30 13:40:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(c1_0.id) 
    from
        chats c1_0 
    where
        c1_0.user_id=? 
        and c1_0.is_favorite
2025-06-30 13:40:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/usage-stats
2025-06-30 13:40:13 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:13 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:13 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:13 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:13 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:13 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/usage-stats
2025-06-30 13:40:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(c1_0.id) 
    from
        chats c1_0 
    where
        c1_0.user_id=?
2025-06-30 13:40:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    INNER JOIN
        Chat c 
            ON m.chatId = c.id 
    WHERE
        c.userId = :userId */ select
            count(m1_0.id) 
        from
            messages m1_0 
        join
            chats c1_0 
                on m1_0.chat_id=c1_0.id 
        where
            c1_0.user_id=?
2025-06-30 13:40:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(c1_0.id) 
    from
        chats c1_0 
    where
        c1_0.user_id=? 
        and c1_0.is_favorite
2025-06-30 13:40:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:40:17 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:17 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:17 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:17 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:17 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:17 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:40:17 [http-nio-8080-exec-7] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:17 [http-nio-8080-exec-7] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:17 [http-nio-8080-exec-7] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:17 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:40:17 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:17 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:17 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:17 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:17 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:17 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:40:17 [http-nio-8080-exec-1] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:17 [http-nio-8080-exec-1] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:17 [http-nio-8080-exec-1] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:40:23 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:23 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:23 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:23 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:23 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:23 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:40:23 [http-nio-8080-exec-2] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:23 [http-nio-8080-exec-2] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:23 [http-nio-8080-exec-2] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:40:23 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:23 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:23 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:23 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:23 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:40:23 [http-nio-8080-exec-3] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:23 [http-nio-8080-exec-3] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:23 [http-nio-8080-exec-3] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:26 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:26 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:26 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:26 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:26 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:26 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:26 [http-nio-8080-exec-4] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:26 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:26 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:26 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:26 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:26 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:26 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:26 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:26 [http-nio-8080-exec-6] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:26 [http-nio-8080-exec-6] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:26 [http-nio-8080-exec-6] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:27 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:27 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:27 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:27 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:27 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:27 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:27 [http-nio-8080-exec-10] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:27 [http-nio-8080-exec-10] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:27 [http-nio-8080-exec-10] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:27 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:27 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:27 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:27 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:27 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:27 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:27 [http-nio-8080-exec-5] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:27 [http-nio-8080-exec-5] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:27 [http-nio-8080-exec-5] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:40:27 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:27 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:27 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:27 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:27 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:27 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:40:27 [http-nio-8080-exec-9] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:27 [http-nio-8080-exec-9] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:27 [http-nio-8080-exec-9] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:40:27 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:27 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:27 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:27 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:27 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:27 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:40:27 [http-nio-8080-exec-8] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:27 [http-nio-8080-exec-8] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:27 [http-nio-8080-exec-8] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:47 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:47 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:47 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:47 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:47 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:47 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:47 [http-nio-8080-exec-7] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:47 [http-nio-8080-exec-7] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:47 [http-nio-8080-exec-7] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:47 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:47 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:47 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:47 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:47 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:47 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:47 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:47 [http-nio-8080-exec-1] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:47 [http-nio-8080-exec-1] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:47 [http-nio-8080-exec-1] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:47 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:47 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:47 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:47 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:47 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:47 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:47 [http-nio-8080-exec-2] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:47 [http-nio-8080-exec-2] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:47 [http-nio-8080-exec-2] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:47 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:47 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:47 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:47 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:47 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:47 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:47 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats?page=0&size=20&timeFilter=all&aiType=all&isFavorite=false
2025-06-30 13:40:47 [http-nio-8080-exec-3] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:47 [http-nio-8080-exec-3] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:47 [http-nio-8080-exec-3] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:47 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:40:48 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:48 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:48 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:48 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:48 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:48 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:40:48 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:48 [http-nio-8080-exec-4] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:48 [http-nio-8080-exec-4] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:40:48 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:48 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:48 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:48 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:48 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:48 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:40:48 [http-nio-8080-exec-6] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:48 [http-nio-8080-exec-6] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:48 [http-nio-8080-exec-6] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:48 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:40:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/messages
2025-06-30 13:40:50 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:50 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:50 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:50 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:50 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:50 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:50 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:50 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:50 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:50 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:50 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:40:50 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/messages
2025-06-30 13:40:50 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:40:50 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:40:50 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:40:50 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:40:50 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:40:50 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:40:50 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:40:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:40:50 [http-nio-8080-exec-10] INFO  c.a.controller.UserController - 获取用户 258123565311@qq.com 的消息列表
2025-06-30 13:40:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        am1_0.id,
        am1_0.content,
        am1_0.created_at,
        am1_0.from_user_id,
        am1_0.is_read,
        am1_0.message_type,
        am1_0.subject,
        am1_0.to_user_id 
    from
        admin_messages am1_0 
    where
        am1_0.to_user_id=? 
    order by
        am1_0.created_at desc,
        am1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:40:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/messages
2025-06-30 13:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:40:50 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:50 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:50 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:50 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:50 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:50 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/messages
2025-06-30 13:40:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:50 [http-nio-8080-exec-9] INFO  c.a.controller.UserController - 获取用户 258123565311@qq.com 的消息列表
2025-06-30 13:40:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        am1_0.id,
        am1_0.content,
        am1_0.created_at,
        am1_0.from_user_id,
        am1_0.is_read,
        am1_0.message_type,
        am1_0.subject,
        am1_0.to_user_id 
    from
        admin_messages am1_0 
    where
        am1_0.to_user_id=? 
    order by
        am1_0.created_at desc,
        am1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:40:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:40:50 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:40:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/support/customer-chats
2025-06-30 13:40:50 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:50 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:50 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:50 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:50 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:50 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/support/customer-chats
2025-06-30 13:40:50 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:40:50 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getCustomerChats(); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:40:50 [http-nio-8080-exec-8] INFO  c.a.controller.AdminController - 客服工作台访问请求:
2025-06-30 13:40:50 [http-nio-8080-exec-8] INFO  c.a.controller.AdminController - - 用户名: 258123565311@qq.com
2025-06-30 13:40:50 [http-nio-8080-exec-8] INFO  c.a.controller.AdminController - - 权限列表: [ROLE_support]
2025-06-30 13:40:50 [http-nio-8080-exec-8] INFO  c.a.controller.AdminController - - 是否已认证: true
2025-06-30 13:40:50 [http-nio-8080-exec-8] INFO  c.a.controller.AdminController - 开始获取客户对话列表
2025-06-30 13:40:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        sc.userId 
    FROM
        SupportChat sc 
    WHERE
        sc.senderType = 'USER' 
    GROUP BY
        sc.userId 
    ORDER BY
        MAX(sc.createdAt) DESC */ select
            sc1_0.user_id 
        from
            support_chats sc1_0 
        where
            sc1_0.sender_type='USER' 
        group by
            sc1_0.user_id 
        order by
            max(sc1_0.created_at) desc
2025-06-30 13:40:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:40:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:40:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:40:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:40:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:40:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        sc1_0.id,
        sc1_0.content,
        sc1_0.created_at,
        sc1_0.is_read,
        sc1_0.sender_type,
        sc1_0.support_id,
        sc1_0.updated_at,
        sc1_0.user_id,
        sc1_0.version 
    from
        support_chats sc1_0 
    where
        sc1_0.user_id=? 
    order by
        sc1_0.created_at
2025-06-30 13:40:50 [http-nio-8080-exec-8] INFO  c.a.controller.AdminController - 获取到 3 个客户对话
2025-06-30 13:40:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:40:52 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:52 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:52 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:52 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:52 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:52 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:40:52 [http-nio-8080-exec-7] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:52 [http-nio-8080-exec-7] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:52 [http-nio-8080-exec-7] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:40:52 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:52 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:52 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:52 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:52 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:40:52 [http-nio-8080-exec-1] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:40:52 [http-nio-8080-exec-1] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:40:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:52 [http-nio-8080-exec-1] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:40:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:40:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/usage-stats
2025-06-30 13:40:57 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/profile
2025-06-30 13:40:57 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:57 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:57 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:57 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:57 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:57 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:57 [http-nio-8080-exec-3] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:57 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/profile
2025-06-30 13:40:57 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:57 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:57 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:57 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:57 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/usage-stats
2025-06-30 13:40:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/profile
2025-06-30 13:40:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(c1_0.id) 
    from
        chats c1_0 
    where
        c1_0.user_id=?
2025-06-30 13:40:57 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:57 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:57 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    INNER JOIN
        Chat c 
            ON m.chatId = c.id 
    WHERE
        c.userId = :userId */ select
            count(m1_0.id) 
        from
            messages m1_0 
        join
            chats c1_0 
                on m1_0.chat_id=c1_0.id 
        where
            c1_0.user_id=?
2025-06-30 13:40:57 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:57 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:57 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/profile
2025-06-30 13:40:57 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(c1_0.id) 
    from
        chats c1_0 
    where
        c1_0.user_id=? 
        and c1_0.is_favorite
2025-06-30 13:40:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/usage-stats
2025-06-30 13:40:57 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:40:57 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:40:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:57 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:40:57 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:40:57 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:40:57 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/usage-stats
2025-06-30 13:40:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:40:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(c1_0.id) 
    from
        chats c1_0 
    where
        c1_0.user_id=?
2025-06-30 13:40:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        COUNT(m) 
    FROM
        Message m 
    INNER JOIN
        Chat c 
            ON m.chatId = c.id 
    WHERE
        c.userId = :userId */ select
            count(m1_0.id) 
        from
            messages m1_0 
        join
            chats c1_0 
                on m1_0.chat_id=c1_0.id 
        where
            c1_0.user_id=?
2025-06-30 13:40:57 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(c1_0.id) 
    from
        chats c1_0 
    where
        c1_0.user_id=? 
        and c1_0.is_favorite
2025-06-30 13:41:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:41:01 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:01 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:41:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:01 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:41:01 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:41:01 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:41:01 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:41:01 [http-nio-8080-exec-10] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:41:01 [http-nio-8080-exec-10] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:41:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:01 [http-nio-8080-exec-10] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:41:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:41:01 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:41:01 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:01 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:41:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:01 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:41:01 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:41:01 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:41:01 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:41:01 [http-nio-8080-exec-9] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:41:01 [http-nio-8080-exec-9] DEBUG c.a.controller.HistoryController - 当前认证主体: 258123565311@qq.com
2025-06-30 13:41:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:01 [http-nio-8080-exec-9] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:41:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:41:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
2025-06-30 13:41:02 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:02 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 加载用户: 258123565311@qq.com
2025-06-30 13:41:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:02 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:41:02 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_support
2025-06-30 13:41:02 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_support]
2025-06-30 13:41:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/logout
2025-06-30 13:41:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-06-30 13:41:06 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-30 13:41:06 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-06-30 13:41:06 [http-nio-8080-exec-8] INFO  c.a.controller.AuthController - 收到用户登录请求: 2581235653@qq.com
2025-06-30 13:41:06 [http-nio-8080-exec-8] INFO  com.aiplatform.service.UserService - 用户登录请求: 2581235653@qq.com
2025-06-30 13:41:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:06 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:06 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:41:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:06 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:06 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:41:06 [http-nio-8080-exec-8] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:41:06 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-06-30 13:41:06 [http-nio-8080-exec-8] INFO  com.aiplatform.service.UserService - 开始为用户 3 执行登录自动清理
2025-06-30 13:41:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND c.isProtected = false 
        AND c.lastActivity < :cutoffDate */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and c1_0.is_protected=0 
            and c1_0.last_activity<?
2025-06-30 13:41:06 [http-nio-8080-exec-8] INFO  com.aiplatform.service.UserService - 用户 3 没有需要清理的过期对话
2025-06-30 13:41:06 [http-nio-8080-exec-8] INFO  com.aiplatform.service.UserService - 用户登录成功: 3
2025-06-30 13:41:06 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* update
        for com.aiplatform.entity.User */update users 
    set
        email=?,
        last_login=?,
        password=?,
        permissions=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-06-30 13:41:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:41:06 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:06 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:41:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:06 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:06 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:41:06 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:41:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:41:06 [http-nio-8080-exec-7] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:41:06 [http-nio-8080-exec-7] DEBUG c.a.controller.HistoryController - 当前认证主体: 2581235653@qq.com
2025-06-30 13:41:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:06 [http-nio-8080-exec-7] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:41:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:41:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /history/chats
2025-06-30 13:41:06 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:06 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:41:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:06 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:06 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:41:06 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:41:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /history/chats
2025-06-30 13:41:06 [http-nio-8080-exec-1] INFO  c.a.controller.HistoryController - 获取用户对话列表: page=0, size=20, keyword=null
2025-06-30 13:41:06 [http-nio-8080-exec-1] DEBUG c.a.controller.HistoryController - 当前认证主体: 2581235653@qq.com
2025-06-30 13:41:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:06 [http-nio-8080-exec-1] INFO  c.a.controller.HistoryController - 查询参数: keyword=null, aiType=null, favorite=null, timeFilter=null
2025-06-30 13:41:06 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        c 
    FROM
        Chat c 
    WHERE
        c.userId = :userId 
        AND (
            :keyword IS NULL 
            OR c.title LIKE :keyword_1
        ) 
        AND (
            :aiType IS NULL 
            OR c.aiType = :aiType
        ) 
        AND (
            :isFavorite IS NULL 
            OR c.isFavorite = :isFavorite
        ) 
        AND (
            :timeFilter IS NULL 
            OR c.lastActivity >= :timeFilter
        ) 
    ORDER BY
        c.lastActivity DESC */ select
            c1_0.id,
            c1_0.ai_type,
            c1_0.created_at,
            c1_0.is_favorite,
            c1_0.is_protected,
            c1_0.last_activity,
            c1_0.message_count,
            c1_0.title,
            c1_0.updated_at,
            c1_0.user_id 
        from
            chats c1_0 
        where
            c1_0.user_id=? 
            and (
                ? is null 
                or c1_0.title like replace(?, '\\', '\\\\')
            ) 
            and (
                ? is null 
                or c1_0.ai_type=?
            ) 
            and (
                ? is null 
                or c1_0.is_favorite=?
            ) 
            and (
                ? is null 
                or c1_0.last_activity>=?
            ) 
        order by
            c1_0.last_activity desc 
        limit
            ?, ?
2025-06-30 13:41:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/users?keyword=&page=0&size=50
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:41:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:41:08 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/users?keyword=&page=0&size=50
2025-06-30 13:41:08 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getUsers(java.lang.String,int,int,java.lang.String,java.lang.String); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:41:08 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getUsers(java.lang.String,int,int,java.lang.String,java.lang.String); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - === AdminController.getUsers 开始 ===
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 管理员获取用户列表请求: keyword=, page=0, size=50
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 当前请求用户: name=2581235653@qq.com, authenticated=true, authorities=[ROLE_admin]
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 调用 UserService.searchUsers...
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - === UserService.searchUsers 开始 ===
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 请求参数: keyword=, page=0, size=50, sortBy=createdAt, sortDirection=desc
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 当前认证用户: name=2581235653@qq.com, authorities=[ROLE_admin]
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 查询所有用户
2025-06-30 13:41:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 查询结果: 总数=6, 当前页数量=6
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 用户: id=10, email=25812356531111@qq.com, username=25812356531111@qq.com, role=user, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 用户: id=8, email=aaa@example.com, username=aaa, role=support, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 用户: id=7, email=cakravartin@example.com, username=Cakravartin, role=user, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 用户: id=6, email=25812356531@qq.com, username=zimo1, role=user, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - === UserService.searchUsers 结束 ===
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 用户列表查询成功: 总数=6, 当前页数量=6
2025-06-30 13:41:08 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - === AdminController.getUsers 结束 ===
2025-06-30 13:41:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/users?keyword=&page=0&size=50
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:41:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:41:08 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/users?keyword=&page=0&size=50
2025-06-30 13:41:08 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getUsers(java.lang.String,int,int,java.lang.String,java.lang.String); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:41:08 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getUsers(java.lang.String,int,int,java.lang.String,java.lang.String); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - === AdminController.getUsers 开始 ===
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - 管理员获取用户列表请求: keyword=, page=0, size=50
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - 当前请求用户: name=2581235653@qq.com, authenticated=true, authorities=[ROLE_admin]
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - 调用 UserService.searchUsers...
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  com.aiplatform.service.UserService - === UserService.searchUsers 开始 ===
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  com.aiplatform.service.UserService - 请求参数: keyword=, page=0, size=50, sortBy=createdAt, sortDirection=desc
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  com.aiplatform.service.UserService - 当前认证用户: name=2581235653@qq.com, authorities=[ROLE_admin]
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  com.aiplatform.service.UserService - 查询所有用户
2025-06-30 13:41:08 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  com.aiplatform.service.UserService - 查询结果: 总数=6, 当前页数量=6
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  com.aiplatform.service.UserService - 用户: id=10, email=25812356531111@qq.com, username=25812356531111@qq.com, role=user, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  com.aiplatform.service.UserService - 用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  com.aiplatform.service.UserService - 用户: id=8, email=aaa@example.com, username=aaa, role=support, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  com.aiplatform.service.UserService - 用户: id=7, email=cakravartin@example.com, username=Cakravartin, role=user, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  com.aiplatform.service.UserService - 用户: id=6, email=25812356531@qq.com, username=zimo1, role=user, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  com.aiplatform.service.UserService - 用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  com.aiplatform.service.UserService - === UserService.searchUsers 结束 ===
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - 用户列表查询成功: 总数=6, 当前页数量=6
2025-06-30 13:41:08 [http-nio-8080-exec-6] INFO  c.a.controller.AdminController - === AdminController.getUsers 结束 ===
2025-06-30 13:41:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/users?keyword=&page=0&size=50
2025-06-30 13:41:08 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:08 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:41:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:08 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:08 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:41:08 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:41:08 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/users?keyword=&page=0&size=50
2025-06-30 13:41:08 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getUsers(java.lang.String,int,int,java.lang.String,java.lang.String); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:41:08 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getUsers(java.lang.String,int,int,java.lang.String,java.lang.String); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:41:08 [http-nio-8080-exec-10] INFO  c.a.controller.AdminController - === AdminController.getUsers 开始 ===
2025-06-30 13:41:08 [http-nio-8080-exec-10] INFO  c.a.controller.AdminController - 管理员获取用户列表请求: keyword=, page=0, size=50
2025-06-30 13:41:08 [http-nio-8080-exec-10] INFO  c.a.controller.AdminController - 当前请求用户: name=2581235653@qq.com, authenticated=true, authorities=[ROLE_admin]
2025-06-30 13:41:08 [http-nio-8080-exec-10] INFO  c.a.controller.AdminController - 调用 UserService.searchUsers...
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  com.aiplatform.service.UserService - === UserService.searchUsers 开始 ===
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  com.aiplatform.service.UserService - 请求参数: keyword=, page=0, size=50, sortBy=createdAt, sortDirection=desc
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  com.aiplatform.service.UserService - 当前认证用户: name=2581235653@qq.com, authorities=[ROLE_admin]
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  com.aiplatform.service.UserService - 查询所有用户
2025-06-30 13:41:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  com.aiplatform.service.UserService - 查询结果: 总数=6, 当前页数量=6
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  com.aiplatform.service.UserService - 用户: id=10, email=25812356531111@qq.com, username=25812356531111@qq.com, role=user, status=active
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  com.aiplatform.service.UserService - 用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  com.aiplatform.service.UserService - 用户: id=8, email=aaa@example.com, username=aaa, role=support, status=active
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  com.aiplatform.service.UserService - 用户: id=7, email=cakravartin@example.com, username=Cakravartin, role=user, status=active
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  com.aiplatform.service.UserService - 用户: id=6, email=25812356531@qq.com, username=zimo1, role=user, status=active
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  com.aiplatform.service.UserService - 用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  com.aiplatform.service.UserService - === UserService.searchUsers 结束 ===
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  c.a.controller.AdminController - 用户列表查询成功: 总数=6, 当前页数量=6
2025-06-30 13:41:09 [http-nio-8080-exec-10] INFO  c.a.controller.AdminController - === AdminController.getUsers 结束 ===
2025-06-30 13:41:11 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /admin/users/9/permissions
2025-06-30 13:41:11 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:11 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:41:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:11 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:11 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:41:11 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:41:11 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /admin/users/9/permissions
2025-06-30 13:41:11 [http-nio-8080-exec-5] ERROR c.a.exception.GlobalExceptionHandler - 运行时异常: JSON parse error: Cannot deserialize value of type `java.lang.Boolean` from Object value (token `JsonToken.START_OBJECT`)
2025-06-30 13:41:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/users?keyword=&page=0&size=50
2025-06-30 13:41:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/me
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:51 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:41:51 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:41:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:51 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:41:51 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:41:51 [http-nio-8080-exec-1] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:41:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/me
2025-06-30 13:41:51 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/users?keyword=&page=0&size=50
2025-06-30 13:41:51 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getUsers(java.lang.String,int,int,java.lang.String,java.lang.String); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:41:51 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getUsers(java.lang.String,int,int,java.lang.String,java.lang.String); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - === AdminController.getUsers 开始 ===
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 管理员获取用户列表请求: keyword=, page=0, size=50
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 当前请求用户: name=2581235653@qq.com, authenticated=true, authorities=[ROLE_admin]
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 调用 UserService.searchUsers...
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  com.aiplatform.service.UserService - === UserService.searchUsers 开始 ===
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  com.aiplatform.service.UserService - 请求参数: keyword=, page=0, size=50, sortBy=createdAt, sortDirection=desc
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  com.aiplatform.service.UserService - 当前认证用户: name=2581235653@qq.com, authorities=[ROLE_admin]
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  com.aiplatform.service.UserService - 查询所有用户
2025-06-30 13:41:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:41:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  com.aiplatform.service.UserService - 查询结果: 总数=6, 当前页数量=6
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  com.aiplatform.service.UserService - 用户: id=10, email=25812356531111@qq.com, username=25812356531111@qq.com, role=user, status=active
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  com.aiplatform.service.UserService - 用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  com.aiplatform.service.UserService - 用户: id=8, email=aaa@example.com, username=aaa, role=support, status=active
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  com.aiplatform.service.UserService - 用户: id=7, email=cakravartin@example.com, username=Cakravartin, role=user, status=active
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  com.aiplatform.service.UserService - 用户: id=6, email=25812356531@qq.com, username=zimo1, role=user, status=active
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  com.aiplatform.service.UserService - 用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  com.aiplatform.service.UserService - === UserService.searchUsers 结束 ===
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - 用户列表查询成功: 总数=6, 当前页数量=6
2025-06-30 13:41:51 [http-nio-8080-exec-4] INFO  c.a.controller.AdminController - === AdminController.getUsers 结束 ===
2025-06-30 13:41:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/users?keyword=&page=0&size=50
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:41:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:41:52 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/users?keyword=&page=0&size=50
2025-06-30 13:41:52 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getUsers(java.lang.String,int,int,java.lang.String,java.lang.String); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:41:52 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.aiplatform.controller.AdminController.getUsers(java.lang.String,int,int,java.lang.String,java.lang.String); target is of class [com.aiplatform.controller.AdminController]
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - === AdminController.getUsers 开始 ===
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 管理员获取用户列表请求: keyword=, page=0, size=50
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 当前请求用户: name=2581235653@qq.com, authenticated=true, authorities=[ROLE_admin]
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 调用 UserService.searchUsers...
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - === UserService.searchUsers 开始 ===
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 请求参数: keyword=, page=0, size=50, sortBy=createdAt, sortDirection=desc
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 当前认证用户: name=2581235653@qq.com, authorities=[ROLE_admin]
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 查询所有用户
2025-06-30 13:41:52 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.created_at desc 
    limit
        ?, ?
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 查询结果: 总数=6, 当前页数量=6
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 用户: id=10, email=25812356531111@qq.com, username=25812356531111@qq.com, role=user, status=active
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 用户: id=9, email=258123565311@qq.com, username=258123565311@qq.com, role=support, status=active
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 用户: id=8, email=aaa@example.com, username=aaa, role=support, status=active
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 用户: id=7, email=cakravartin@example.com, username=Cakravartin, role=user, status=active
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 用户: id=6, email=25812356531@qq.com, username=zimo1, role=user, status=active
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - 用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  com.aiplatform.service.UserService - === UserService.searchUsers 结束 ===
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - 用户列表查询成功: 总数=6, 当前页数量=6
2025-06-30 13:41:52 [http-nio-8080-exec-2] INFO  c.a.controller.AdminController - === AdminController.getUsers 结束 ===
2025-06-30 13:42:52 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /admin/users/9/permissions
2025-06-30 13:42:52 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:42:52 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:42:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:42:52 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:42:52 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:42:52 [http-nio-8080-exec-10] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:42:52 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /admin/users/9/permissions
2025-06-30 13:42:52 [http-nio-8080-exec-10] INFO  c.a.controller.AdminController - 管理员更新用户 9 的权限: {text_to_text=true, text_to_image=true, image_to_image=false, image_to_text=true, text_to_video=false, text_to_3d=false, chat=true, file_upload=true, data_export=false}
2025-06-30 13:42:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:42:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* update
        for com.aiplatform.entity.User */update users 
    set
        email=?,
        last_login=?,
        password=?,
        permissions=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-06-30 13:42:52 [http-nio-8080-exec-10] INFO  c.a.controller.AdminController - 用户 9 权限更新成功: {"text_to_text":true,"text_to_image":true,"image_to_image":false,"image_to_text":true,"text_to_video":false,"text_to_3d":false,"chat":true,"file_upload":true,"data_export":false}
2025-06-30 13:42:53 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /admin/users/9/permissions
2025-06-30 13:42:53 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:42:53 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:42:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:42:53 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:42:53 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:42:53 [http-nio-8080-exec-9] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:42:53 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /admin/users/9/permissions
2025-06-30 13:42:53 [http-nio-8080-exec-9] INFO  c.a.controller.AdminController - 管理员更新用户 9 的权限: {text_to_text=true, text_to_image=true, image_to_image=true, image_to_text=true, text_to_video=false, text_to_3d=false, chat=true, file_upload=true, data_export=false}
2025-06-30 13:42:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:42:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* update
        for com.aiplatform.entity.User */update users 
    set
        email=?,
        last_login=?,
        password=?,
        permissions=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-06-30 13:42:53 [http-nio-8080-exec-9] INFO  c.a.controller.AdminController - 用户 9 权限更新成功: {"text_to_text":true,"text_to_image":true,"image_to_image":true,"image_to_text":true,"text_to_video":false,"text_to_3d":false,"chat":true,"file_upload":true,"data_export":false}
2025-06-30 13:42:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /admin/users/9/permissions
2025-06-30 13:42:54 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:42:54 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:42:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:42:54 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:42:54 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:42:54 [http-nio-8080-exec-5] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:42:54 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /admin/users/9/permissions
2025-06-30 13:42:54 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - 管理员更新用户 9 的权限: {text_to_text=true, text_to_image=true, image_to_image=false, image_to_text=true, text_to_video=false, text_to_3d=false, chat=true, file_upload=true, data_export=false}
2025-06-30 13:42:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:42:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* update
        for com.aiplatform.entity.User */update users 
    set
        email=?,
        last_login=?,
        password=?,
        permissions=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-06-30 13:42:54 [http-nio-8080-exec-5] INFO  c.a.controller.AdminController - 用户 9 权限更新成功: {"text_to_text":true,"text_to_image":true,"image_to_image":false,"image_to_text":true,"text_to_video":false,"text_to_3d":false,"chat":true,"file_upload":true,"data_export":false}
2025-06-30 13:42:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /admin/users/9/permissions
2025-06-30 13:42:54 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - === CustomUserDetailsService.loadUserByUsername ===
2025-06-30 13:42:54 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 加载用户: 2581235653@qq.com
2025-06-30 13:42:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-30 13:42:54 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 找到用户: id=3, email=2581235653@qq.com, username=wzm11111, role=admin, status=active
2025-06-30 13:42:54 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户权限: ROLE_admin
2025-06-30 13:42:54 [http-nio-8080-exec-7] INFO  c.a.s.CustomUserDetailsService - 用户详情构建完成: authorities=[ROLE_admin]
2025-06-30 13:42:54 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /admin/users/9/permissions
2025-06-30 13:42:54 [http-nio-8080-exec-7] INFO  c.a.controller.AdminController - 管理员更新用户 9 的权限: {text_to_text=true, text_to_image=false, image_to_image=false, image_to_text=true, text_to_video=false, text_to_3d=false, chat=true, file_upload=true, data_export=false}
2025-06-30 13:42:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.last_login,
        u1_0.password,
        u1_0.permissions,
        u1_0.role,
        u1_0.status,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-30 13:42:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* update
        for com.aiplatform.entity.User */update users 
    set
        email=?,
        last_login=?,
        password=?,
        permissions=?,
        role=?,
        status=?,
        updated_at=?,
        username=? 
    where
        id=?
2025-06-30 13:42:54 [http-nio-8080-exec-7] INFO  c.a.controller.AdminController - 用户 9 权限更新成功: {"text_to_text":true,"text_to_image":false,"image_to_image":false,"image_to_text":true,"text_to_video":false,"text_to_3d":false,"chat":true,"file_upload":true,"data_export":false}
2025-06-30 13:51:48 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m26s751ms82µs700ns).
